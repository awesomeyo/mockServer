{
  "stats": {
    "suites": 3,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-30T12:59:58.152Z",
    "end": "2020-05-30T12:59:58.232Z",
    "duration": 80,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5bc53790-6732-4ae4-9713-158dc49bc853",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c69435f-5bd7-4fd9-8e88-006bc5191958",
          "title": "Token",
          "fullFile": "C:\\Dev\\mockServer\\test\\token_test.js",
          "file": "\\test\\token_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Token \"before all\" hook",
              "timedOut": false,
              "duration": 42,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "api.post('tokens')\n    .set('Accept', 'application/x-www-form-urlencoded')\n    .send({\n        id: faker.random.uuid(),\n        name: faker.name.findName(),\n        symbol: tokenSymbol,\n        owner: faker.lorem.word(),\n        userId: faker.random.uuid(),\n        txHash: faker.lorem.word()\n    })\n    .expect('Content-Type', /json/)\n    .expect(201)\n    .end(function(err, res) {\n        result = res\n        done()\n    })",
              "err": {},
              "uuid": "a833aa92-406b-4d8d-80b8-fb7ad67ac612",
              "parentUUID": "5c69435f-5bd7-4fd9-8e88-006bc5191958",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "36d26175-a694-40e5-bbf5-52a94d09cc76",
              "title": "/GET tokens",
              "fullFile": "C:\\Dev\\mockServer\\test\\token_test.js",
              "file": "\\test\\token_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a 200 response",
                  "fullTitle": "Token /GET tokens should return a 200 response",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "api.get('tokens')\n    .set('Accept', 'application/json')\n    .expect(200, done)",
                  "err": {},
                  "uuid": "d4e321c0-c690-41c3-b972-0cf8813bc4f6",
                  "parentUUID": "36d26175-a694-40e5-bbf5-52a94d09cc76",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d4e321c0-c690-41c3-b972-0cf8813bc4f6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3b20a6f5-f3f4-4176-bddb-71f7195db2ad",
              "title": "/GET tokens/hello",
              "fullFile": "C:\\Dev\\mockServer\\test\\token_test.js",
              "file": "\\test\\token_test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a 404 response",
                  "fullTitle": "Token /GET tokens/hello should return a 404 response",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "api.get('tokens/hello')\n    .set('Accept', 'application/json')\n    .expect(404, done)",
                  "err": {},
                  "uuid": "14265c30-0c45-4cf4-8e19-8d8fa6d5630f",
                  "parentUUID": "3b20a6f5-f3f4-4176-bddb-71f7195db2ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "14265c30-0c45-4cf4-8e19-8d8fa6d5630f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}